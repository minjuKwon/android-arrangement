연락처 제공자는 사람에 대한 중앙 데이터 저장소를 관리하는 강력하고 유연한 Android 구성요소입니다. 연락처 제공자는 기기의 연락처 애플리케이션에서 볼 수 있는 데이터의 소스이며, 개발자는 자신의 애플리케이션에서 연락처 제공자의 데이터에 액세스하고 기기와 온라인 서비스 간에 데이터를 전송할 수도 있습니다. 이 제공업체는 광범위한 데이터 소스를 수용하고 각 개인에 대해 가능한 한 많은 데이터를 관리하려고 하므로 조직이 복잡합니다. 따라서 이 제공업체의 API에는 데이터 검색과 수정을 모두 용이하게 하는 광범위한 계약 클래스와 인터페이스 세트가 포함되어 있습니다.



연락처 제공자의 구성	
연락처 제공자는 Android 콘텐츠 제공자 구성요소입니다. 사용자에 관한 세 가지 유형의 데이터를 유지합니다. 각 유형은 그림 1에서와 같이 제공자가 제공하는 테이블에 대응합니다. 이 세 개의 테이블은 일반적으로 해당 계약 클래스 이름으로 불립니다. 이 클래스는 테이블에서 사용하는 콘텐츠 URI, 열 이름, 열 값의 상수를 정의합니다.

테이블 ContactsContract.Contacts
원시 연락처 행들을 종합하여 얻은 서로 다른 사람을 나타내는 행입니다.
테이블 ContactsContract.RawContacts
사용자 계정 및 유형에 따라 개인의 데이터 요약이 포함된 행입니다.
테이블 ContactsContract.Data
이메일 주소나 전화번호와 같은 원시 연락처의 세부정보가 포함된 행입니다.

ContactsContract의 계약 클래스에서의 이 외의 다른 테이블은 연락처 제공자가 작업을 관리하거나 기기의 연락처 또는 전화 통신 애플리케이션에서 특정 기능을 지원하는 데 사용하는 보조 테이블입니다.



원시 연락처
원시 연락처는 특정 계정 유형과 계정 이름에서 가져온 한 사람의 데이터를 의미한다. 이때 계정 유형은Google, Naver 같이 연락처를 제공하는 서비스의 종류를 의미하고 계정 이름은 계정을 식별하는 고유 문자열을 의미한다. 보통 계정의 로그인 ID나 이메일 주소를 뜻한다. Contacts Provider는 한 사람의 데이터 출처로 여러 온라인 서비스를 허용하기 때문에, 동일한 사람에 대해 여러 개의 raw contact를 가질 수 있다. 또한, 동일한 계정 유형 안에서 서로 다른 계정을 통해 한 사람의 데이터를 결합하는 것도 가능하다.

Raw contact의 대부분의 데이터는 ContactsContract.RawContacts 테이블에 저장되지 않는다. 대신, 하나 이상의 행으로 ContactsContract.Data 테이블에 저장된다. 각 데이터 행에는 Data.RAW_CONTACT_ID 컬럼이 있으며, 이는 해당 데이터 행이 속한 ContactsContract.RawContacts 행의 _ID 값을 가진다.

주요 원시 연락처 열
ContactsContract.RawContacts 테이블의 중요 열은 다음과 같습니다.
ACCOUNT_NAME	
이 원시 연락처의 소스인 계정 유형의 계정 이름입니다. 예를 들어 Google 계정의 계정 이름은 기기 소유자의 Gmail 주소 중 하나입니다. 
이 이름의 형식은 각 계정 유형별로 다릅니다. 반드시 이메일 주소일 필요는 없습니다.
ACCOUNT_TYPE	
이 원시 연락처의 소스인 계정 유형입니다. 예를 들어 Google 계정의 계정 유형은 com.google입니다.  도메인 식별자를 사용하여 항상 소유하거나 제어하는 도메인의 계정 유형을 지정하세요. 이렇게 하면 계정 유형이 고유하게 유지됩니다.
연락처 데이터를 제공하는 계정 유형에는 일반적으로 연락처 제공자와 동기화되는 동기화 어댑터가 연결되어 있습니다.
DELETED	
원시 연락처에 대한 '삭제됨' 플래그입니다.	
이 플래그를 사용하면 연락처 제공자가 동기화 어댑터가 서버에서 행을 삭제한 다음 최종적으로 저장소에서 해당 행을 삭제할 수 있을 때까지 내부적으로 행을 유지할 수 있습니다.

다음은 ContactsContract.RawContacts 테이블에 관한 중요한 참고사항입니다.
- 원시 연락처의 이름은 ContactsContract.RawContacts의 행에 저장되지 않습니다. 대신 ContactsContract.Data 테이블의 ContactsContract.CommonDataKinds.StructuredName 행에 저장됩니다. 하나의 원시 연락처에는 ContactsContract.Data 테이블에서 이 유형의 행이 하나만 있습니다. StructuredName은 이름 관련 필드를 담는 데이터 타입으로 하나의 raw contact는 이름이 하나만 있으므로, 이 타입의 row는 1개만 존재
- 원시 연락처 행에서 본인 소유의 계정 데이터를 사용하려면 이를 먼저 AccountManager에 등록해야 합니다. 이렇게 하려면 사용자에게 계정 유형과 계정 이름을 계정 목록에 추가하라는 메시지를 표시합니다. 이렇게 하지 않으면 연락처 제공자가 원시 연락처 행을 자동으로 삭제합니다. 즉, Contacts Provider는 해당 계정이 AccountManager에 등록되어 있어야 유효하다고 판단하기 때문에 유효한 계정의 대한 row만 유지. 예를 들어 앱에서 com.example.dataservice 도메인을 사용하는 웹 기반 서비스의 연락처 데이터를 유지하고 서비스의 사용자 계정이 becky.sharp@dataservice.example.com인 경우 사용자가 먼저 계정 '유형' (com.example.dataservice)과 계정 '이름'(becky.smart@dataservice.example.com)을 추가해야 앱에서 원시 연락처 행을 추가할 수 있습니다. 이 요구사항을 사용자에게 문서로 설명하거나 사용자에게 유형과 이름을 추가하라는 메시지를 표시하거나 두 가지를 모두 수행할 수 있습니다. 


원시 연락처 데이터 소스 예시
원시 연락처의 작동 방식을 이해하려면 기기에 다음 세 개의 사용자 계정이 정의된 사용자 'Emily Dickinson'이 있다고 가정해 보겠습니다.
- emily.dickinson@gmail.com
- emilyd@gmail.com
- Twitter 계정인 'belle_of_amherst'
이 사용자는 계정 설정에서 세 계정 모두의 연락처 동기화를 사용 설정했습니다. Emily Dickinson이 브라우저 창을 열고 emily.dickinson@gmail.com으로 Gmail에 로그인한 다음 연락처를 열고 'Thomas Higginson'을 추가한다고 가정해 보겠습니다. 나중에 그녀는 emilyd@gmail.com으로 Gmail에 로그인하고 'Thomas Higginson'에게 이메일을 보냅니다. 그러면 자동으로 연락처에 추가됩니다. 또한 트위터에서 'colonel_tom' (Thomas Higginson의 Twitter ID)도 팔로우합니다.

연락처 제공자는 이 작업의 결과로 원시 연락처를 세 개 생성합니다.
- 'Thomas Higginson'에 대해 생성된 첫번째 원시 연락처는 emily.dickinson@gmail.com 입니다. 사용자 계정 유형은 Google입니다.
- Thomas Higginson'에 대해 생성된 두 번째 원시 연락처는 emilyd@gmail.com입니다. 사용자 계정 유형은 마찬가지로 Google입니다. 이전과 같은 이름을 가진 동일 인물이라도 다른 계정을 추가하였기 때문에 두 번째 원시 연락처가 생성 되었습니다.
- Thomas Higginson'에 대해 생성된 세 번째 원시 연락처는'belle_of_amherst'입니다. 사용자 계정 유형은 Twitter입니다.